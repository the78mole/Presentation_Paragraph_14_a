name: Build LaTeX document
on:
  push:
    tags:
      - "v*"

jobs:
  build_latex:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Holt alle Commits und Tags
      - name: Get the last tag and commit hash
        run: |
          LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          RELEASE_NAME="${LAST_TAG}-${SHORT_COMMIT_HASH}"
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "TAG=$LAST_TAG" >> $GITHUB_ENV
      - name: Compile LaTeX document
        uses: dante-ev/latex-action@latest
        with:
          root_file: Paragraph_14a.tex
          args: -synctex=0 -interaction=nonstopmode --shell-escape -pdf -file-line-error
      - name: Rename PDF file
        run: mv Paragraph_14a.pdf Paragraph_14a_${{ env.TAG }}.pdf
      - name: Save PDF as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: Paragraph_14a_${{ env.TAG }}.pdf
      
      - name: Create Release
        id: create_release
        run: |
          gh release create ${{ env.TAG }} \
            --title "Presentation_${{ env.RELEASE_NAME }}" \
            --notes "Automatically generated release"
          echo "UPLOAD_URL=$(gh release view ${{ env.TAG }} --json uploadUrl --jq .uploadUrl)" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        run: |
          gh release upload ${{ env.TAG }} "./Paragraph_14a_${{ env.TAG }}.pdf" \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.TAG }}
      #     release_name: Presentation_{{ env.RELEASE_NAME }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./Paragraph_14a_${{ env.TAG }}.pdf
      #     asset_name: Paragraph_14a_${{ env.TAG }}.pdf
      #     asset_content_type: application/pdf
