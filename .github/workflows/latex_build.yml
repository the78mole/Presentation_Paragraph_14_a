name: Build LaTeX document
on:
  push:
    tags:
      - "v*"

jobs:
  build_latex:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Holt alle Commits und Tags
      
      # Workaround for Windows devcontainer issue
      - name: Make script executable
        run: chmod +x ./scripts/generate-release-notes.sh

      - name: Generate Release Notes
        run: |
          ./scripts/generate-release-notes.sh release-notes.md "${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile LaTeX document
        uses: dante-ev/latex-action@latest
        with:
          root_file: Paragraph_14a.tex
          args: -synctex=0 -interaction=nonstopmode --shell-escape -pdf -file-line-error

      - name: Rename PDF
        run: mv Paragraph_14a.pdf Paragraph_14a_${{ github.ref_name }}.pdf

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: Presentation.pdf
          path: Paragraph_14a_${{ github.ref_name }}.pdf

      - name: Create GitHub Release if not exists
        run: |
          if ! gh release view "${{ github.ref_name }}" > /dev/null 2>&1; then
            gh release create "${{ github.ref_name }}" \
              --title "Presentation_${{ github.ref_name }}" \
              --notes-file release-notes.md
          else
            echo "Release '${{ github.ref_name }}' already exists. Skipping creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PDF to Release
        run: |
          gh release upload "${{ github.ref_name }}" \
            "./Paragraph_14a_${{ github.ref_name }}.pdf" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
